#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if or .Values.components.pulsar_manager .Values.extra.pulsar_manager }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.pulsar_manager.component }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.pulsar_manager.component }}
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.pulsar_manager.component }}
      annotations:
      {{- if .Values.pulsar_manager.restartPodsOnConfigMapChange }}
      checksum/config: {{ include (print $.Template.BasePath "/pulsar-manager-configmap.yaml") . | sha256sum }}
      {{- end }}
{{ toYaml .Values.pulsar_manager.annotations | indent 8 }}
    spec:
    {{- if .Values.pulsar_manager.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.pulsar_manager.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.pulsar_manager.tolerations }}
      tolerations:
{{ toYaml .Values.pulsar_manager.tolerations | indent 8 }}
    {{- end }}
      priorityClassName: {{ .Values.priorityClassName }}
      terminationGracePeriodSeconds: {{ .Values.pulsar_manager.gracePeriod }}
      containers:
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}"
          image: "{{ .Values.images.pulsar_manager.repository }}:{{ .Values.images.pulsar_manager.tag }}"
          imagePullPolicy: {{ .Values.images.pulsar_manager.pullPolicy }}
          {{- if .Values.tls.enabled }}
          command: [ "/pulsar-manager/entrypoint-tls.sh" ]
          {{- end }}
        {{- if .Values.pulsar_manager.resources }}
          resources:
{{ toYaml .Values.pulsar_manager.resources | indent 12 }}
        {{- end }}
          ports:
          - containerPort: {{ .Values.pulsar_manager.service.targetPort }}
          volumeMounts:
          - name: pulsar-manager-data
            mountPath: /data          
          - name: token-keys
            mountPath: /pulsar/keys
            readOnly: true
          {{- if .Values.tls.enabled }}
          - name: ca
            mountPath: "/pulsar/certs/ca"
            readOnly: true
          - name: entrypoint
            mountPath: /pulsar-manager/entrypoint-tls.sh
            subPath: entrypoint-tls.sh
          {{- end }}
          - name: application-properties
            mountPath: /pulsar-manager/pulsar-manager/application.properties
            subPath: application.properties
          envFrom:
          - configMapRef:
              name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}"
          env:
          - name: PULSAR_CLUSTER
            value: {{ template "pulsar.fullname" . }}
          {{- if .Values.pulsar_manager.postgresql }}
          - name: DRIVER_CLASS_NAME
            value: org.postgresql.Driver
          - name: URL
            value: {{ .Values.pulsar_manager.postgresql.url }}
          - name: USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.pulsar_manager.postgresql.secretName }}
                key: pulsar_manager_postgres_user
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.pulsar_manager.postgresql.secretName }}
                key: pulsar_manager_postgres_password
          {{- end }}
          {{- if .Values.pulsar_manager.jwtSecretName }}
          - name: JWT_TOKEN
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.pulsar_manager.jwtSecretName }}"
                key: TOKEN
          {{- end }}
          {{- if .Values.pulsar_manager.secretkeySecretName }}
          - name: SECRET_KEY
            value: file:///pulsar/keys/secret.key
          {{- end }}
      volumes:
        - name: pulsar-manager-data
          emptyDir: {}
        {{- if .Values.pulsar_manager.secretkeySecretName }}        
        - name: token-keys
          secret:
            defaultMode: 420
            items:
            - key: SECRETKEY
              path: secret.key
            secretName: "{{ .Values.pulsar_manager.secretkeySecretName }}"
        {{- end }}
        {{- if .Values.tls.enabled }}
        - name: ca
          secret:
            secretName: "{{ .Release.Name }}-ca-tls"
            items:
            - key: ca.crt
              path: ca.crt
        {{- end }}
        - name: application-properties
          configMap: 
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}-application-properties"
            items:
            - key: application.properties
              path: application.properties
        - name: entrypoint
          configMap: 
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}-entrypoint-tls"
            items:
            - key: entrypoint-tls.sh
              path: entrypoint-tls.sh
            defaultMode: 0755

{{- end }}
